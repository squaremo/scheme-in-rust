#! /usr/bin/env scheme-r5rs

(load "compile.ss")

;; These are particular to SISC
(max-stack-trace-depth 16)
;(suppressed-stack-trace-source-kinds '())

(define (compile)
  (set! *quotations* '())
  (let loop ((prog '()))
    (let ((expr (read)))
      (if (eof-object? expr)
          `(program
            (globals ,@(map car g.current))
            (constants ,@*quotations*)
            (code ,@(line-numbers prog)))
          (loop (append prog (compile-expr expr)))))))

;; Put comments in the instructions, every 10 instructions
(define (line-numbers prog)
  (let loop ((line 0)
             (out '())
             (rest prog))
    (if (null? rest)
        (reverse out)
        (let ((instr (car rest)))
          (if (equal? (car instr) 'comment)
              (loop line out (cdr rest))
              (loop (+ line 1)
                    (if (= 0 (modulo line 10))
                        (cons instr (cons (list 'comment 'lineno line) out))
                        (cons instr out))
                    (cdr rest)))))))

(define (main args)
  (case (length args)
    ((1)
     (pretty-print (compile))
     (newline))
    ((2)
     (pretty-print (with-input-from-file (cadr args) compile))
     (newline))))
